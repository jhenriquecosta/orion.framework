@namespace Orion.Framework.Ui.Blazor.Components.OXSyncFusion
@inject IJSRuntime JsRuntime
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper

<div id='sample-header' class="sb-header e-view" role="banner">

    <SFLayout Class="SFClass.HeaderLeft">
        <div class='sb-header-item sb-table-cell'>
            <div id="sb-toggle-left" @onclick="OnToggleClick" role="button" tabindex="0" class="sb-slide-nav sb-icons toggle-active sb-icon-Hamburger" aria-label="toggle all controls navigation"
                 title='toggle leftpane'></div>
        </div>
        <div class='sb-header-item sb-table-cell' id="sb-header-text" style="padding-left:20px">
            <span>ORION TECNOLOGIAS</span>
        </div>
        <div class='sb-header-item sb-table-cell'>
            <div>
            </div>
        </div>
    </SFLayout>
    <SFLayout Class="SFClass.HeaderRight">
        <div class="sb-header-item sb-table-cell">
            <div id="header-theme-switcher" role="button" tabindex="0" title='Change theme of app browser'>
                <SfMenu ID='theme-menu' ShowItemOnClick="true" Items='@menuItems' @ref="MenuBar" CssClass="e-sample-theme-menu">
                    <MenuEvents Created="ThemeMenuCreated" ItemSelected="OnThemeChange"></MenuEvents>
                </SfMenu>
            </div>
        </div>
        <div class="sb-header-item sb-table-cell sb-header-settings sb-icons" @onclick="@OnRightToggleClick" role="button"></div>
    </SFLayout>
</div>

@code {

    public SfMenu MenuBar;

    [Parameter]
    public EventCallback OnToggleClick { get; set; }

    [Parameter]
    public EventCallback OnRightToggleClick { get; set; }


    public List<MenuItem> menuItems = new List<MenuItem>
{
        new MenuItem{ Text = "CHOOSE THEME",
            Items = new List<MenuItem>
{
                new MenuItem { Id= "materialmenu", Text= "Material"},
                new MenuItem { Id= "fabricmenu", Text= "Fabric"},
                new  MenuItem{ Id= "bootstrapmenu", Text= "Bootstrap"},
                new MenuItem { Id= "highcontrastmenu", Text= "High Contrast"},
                new MenuItem { Id= "bootstrap4menu", Text= "Bootstrap V4"},
            }
        }
    };

    private Dictionary<string, string> ThemeMap = new Dictionary<string, string>()
{
        {"Material", "material" },
        {"Fabric", "fabric" },
        {"Bootstrap", "bootstrap" },
        {"High Contrast", "highcontrast" },
        {"Bootstrap V4", "bootstrap4" }
    };

    protected void OnThemeChange(Syncfusion.Blazor.Navigations.MenuEventArgs args)
    {
        if (args.Item.Text != "CHOOSE THEME")
        {
            string url = UriHelper.Uri;
            if (url.IndexOf("?theme=") >= 0)
            {
                string[] splittedUrl = url.Split("?theme=");
                url = splittedUrl[0];
            }
            if (ThemeMap.ContainsKey(args.Item.Text))
            {
                url += "?theme=" + ThemeMap[args.Item.Text];
            }
            //UriHelper.NavigateTo(url);
            JsRuntime.InvokeAsync<Object>("switchTheme", url);
        }



    }

    protected void ThemeMenuCreated(object args)
    {
        JsRuntime.InvokeAsync<Object>("getTheme", args);
    }

}
